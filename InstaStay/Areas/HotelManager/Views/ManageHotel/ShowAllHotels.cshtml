@model IEnumerable<Models.Models.Hotel>

@{
    ViewData["Title"] = "Show All Hotels";
}

<div class="container mt-5">
    <h2 class="text-center mb-4">
        <i class="fas fa-hotel me-2"></i> Manage Hotels
    </h2>
    <div class="table-responsive mx-5">
        <table class="table table-striped table-hover table-bordered border-dark align-middle text-center">
            <thead class="table-dark text-center">
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Name)</th>
                    <th>@Html.DisplayNameFor(model => model.Address)</th>
                    <th>@Html.DisplayNameFor(model => model.Description)</th>
                    <th>@Html.DisplayNameFor(model => model.Stars)</th>
                    <th>@Html.DisplayNameFor(model => model.CoverImage)</th>
                    <th>@Html.DisplayNameFor(model => model.ContactInfo)</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.Name</td>
                        <td>@item.Address</td>
                        <td>@item.Description</td>
                        <td class="text-center">
                            @for (int i = 0; i < item.Stars; i++)
                            {
                                <i class="fas fa-star text-warning"></i>
                            }
                        </td>
                        <td class="text-center">
                            <img src="~/images/HotelImages/@item.CoverImage" alt="@item.Name Cover Image" class="img-thumbnail rounded" style="width: 100px; height: auto;">
                        </td>
                        <td>@item.ContactInfo</td>
                        <td class="text-center">
                            <div class="dropdown">
                                <button class="btn btn-sm btn-outline-info dropdown-toggle" type="button" id="dropdownActions-@item.Id" data-bs-toggle="dropdown" aria-expanded="false">
                                    Actions
                                </button>
                                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownActions-@item.Id">
                                    <li>
                                        <a class="dropdown-item" href="@Url.Action("Edit", new { id = item.Id })">
                                            <i class="fas fa-edit me-2"></i> Edit
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="/HotelManager/ManageHotel/AddRoom?HotelId=@item.Id">
                                            <i class="fas fa-plus me-2"></i> Add Room
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="@Url.Action("Details", new { id = item.Id })">
                                            <i class="fas fa-info-circle me-2"></i> Details
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item text-danger delete-btn" href="#" data-id="@item.Id" data-name="@item.Name">
                                            <i class="fas fa-trash-alt me-2"></i> Delete
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel"><i class="fas fa-exclamation-triangle"></i> Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this hotel?</p>
                <strong id="hotelName"></strong>
            </div>
            <div class="modal-footer text-success">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <a id="confirmDeleteBtn" href="#" class="btn btn-danger">
                    <i class="fas fa-trash-alt"></i> Delete
                </a>
            </div>
        </div>
    </div>
</div>
  @section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Toastr notification
            var successMessage = '@TempData["success"]';
            if (successMessage && successMessage.trim() !== "") {
                toastr.success(successMessage);
            }

            // Delete button click event
            document.querySelectorAll(".delete-btn").forEach(button => {
                button.addEventListener("click", function () {
                    let hotelId = this.getAttribute("data-id");
                    let hotelName = this.getAttribute("data-name");
                    document.getElementById("hotelName").innerText = hotelName;
                    document.getElementById("confirmDeleteBtn").href = `/HotelManager/ManageHotel/Delete/${hotelId}`;
                    
                    // Show Bootstrap modal
                    let deleteModal = new bootstrap.Modal(document.getElementById("deleteModal"));
                    deleteModal.show();
                });
            });

            // Search functionality
            document.getElementById("searchBar")?.addEventListener("input", function () {
                const filter = this.value.toLowerCase();
                const rows = document.querySelectorAll("tbody tr");

                rows.forEach(row => {
                    const cells = row.querySelectorAll("td");
                    const matches = Array.from(cells).some(cell =>
                        cell.innerText.toLowerCase().includes(filter)
                    );
                    row.style.display = matches ? "" : "none";
                });
            });
        });
    </script>
}