@model IEnumerable<Models.Models.Hotel>

@{
    ViewData["Title"] = "Show All Hotels";
}

<div class="container mt-5">
    <h2 class="text-center mb-4">
        <i class="fas fa-hotel me-2"></i>Manage Hotels
    </h2>
    <!-- Table -->
    <div class="table-responsive mx-5">
        <table class="table table-striped table-hover table-bordered align-middle">
            <thead class="table-dark text-center">
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Name)</th>
                    <th>@Html.DisplayNameFor(model => model.Address)</th>
                    <th>@Html.DisplayNameFor(model => model.Description)</th>
                    <th>@Html.DisplayNameFor(model => model.Stars)</th>
                    <th>@Html.DisplayNameFor(model => model.CoverImage)</th>
                    <th>@Html.DisplayNameFor(model => model.ContactInfo)</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.Name</td>
                        <td>@item.Address</td>
                        <td>@item.Description</td>
                        <td class="text-center">
                            @for (int i = 0; i < item.Stars; i++)
                            {
                                <i class="fas fa-star text-warning"></i>
                            }
                        </td>
                        <td class="text-center">
                            <img src="~/images/HotelImages/@item.CoverImage" alt="@item.Name Cover Image" class="img-thumbnail rounded" style="width: 100px; height: auto;">
                        </td>
                        <td>@item.ContactInfo</td>
                        <td class="text-center">
                            <div class="dropdown">
                                <button class="btn btn-sm btn-secondary dropdown-toggle" type="button" id="dropdownActions-@item.Id" data-bs-toggle="dropdown" aria-expanded="false">
                                    Actions
                                </button>
                                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownActions-@item.Id">
                                    <li>
                                        <a class="dropdown-item" href="@Url.Action("Edit", new { id = item.Id })">
                                            <i class="fas fa-edit me-2"></i> Edit
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="/HotelManager/ManageHotel/AddRoom/@item.Id">
                                            <i class="fas fa-plus me-2"></i>Add Room
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="@Url.Action("Details", new { id = item.Id })">
                                            <i class="fas fa-info-circle me-2"></i> Details
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item text-danger" href="@Url.Action("Delete", new { id = item.Id })">
                                            <i class="fas fa-trash-alt me-2"></i> Delete
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
@section Scripts {
    <script>
        document.getElementById("searchBar").addEventListener("input", function () {
            const filter = this.value.toLowerCase();
            const rows = document.querySelectorAll("tbody tr");

            rows.forEach(row => {
                const cells = row.querySelectorAll("td");
                const matches = Array.from(cells).some(cell =>
                    cell.innerText.toLowerCase().includes(filter)
                );
                row.style.display = matches ? "" : "none";
            });
        });
        if (@(TempData["success"] != null ? "true" : "false")) {
            toastr.success('@TempData["success"]');
        }
    </script>
}
